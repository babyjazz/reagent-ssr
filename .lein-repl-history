(do (require '[figwheel-sidecar.repl-api :as figwheel]) (figwheel/cljs-repl))
(in-ns 'reagent-serverside.core)
@items
(ns reagent-serverside.core
    (:require [reagent.core :as reagent :refer [atom]]
              [reagent-serverside.home :refer [items home-page]]))
(do (require '[figwheel-sidecar.repl-api :as figwheel]) (figwheel/cljs-repl))
(in-ns 'reagent-serverside.core)
@items
(reset! items (range 10))
(reset! items (1 2))
(reset! items (range 2))
(reset! items (range 5))
(reset! items (range 2))
(in-ns 'reagent-serverside.core)
@ietms
@items
(in-ns 'reagent-serverside.core)
@items
(ns reagent-serverside.core
    (:require [reagent.core :as reagent :refer [atom]]
              [reagent-serverside.home :refer [items home-page]]))
(do (require '[figwheel-sidecar.repl-api :as figwheel]) (figwheel/cljs-repl))
(ns reagent-serverside.handler
  (:require [compojure.core :refer [GET defroutes]]
            [compojure.route :refer [not-found resources]]
            [ring.middleware.defaults :refer [site-defaults wrap-defaults]]
            [hiccup.core :refer [html]]
            [hiccup.page :refer [include-js include-css]]
            [prone.middleware :refer [wrap-exceptions]]
            [ring.middleware.reload :refer [wrap-reload]]
            [environ.core :refer [env]]
            [reagent-serverside.home :refer [home-page]]
            [reagent-serverside.about :refer [about-page]]))
(in-ns 'reagent-serverside.handler)
@data-api-agent
(in-ns 'reagent-serverside.about)
@data
(def data (atom  1))
@data
